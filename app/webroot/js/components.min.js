class DmbAddCommand extends DumboDirective{constructor(){super()}init(){this.classList.add("icon"),this.classList.add("button"),this.classList.add("icon-plus1"),this.addEventListener("click",t=>{this.handleClick(t)})}handleClick(t){const e=t.target,i=document.createElement("input"),o=document.createElement("input"),n=document.createElement("dmb-input"),s=e.closest("dmb-content");let r=parseInt(e.getAttribute("counter"));i.setAttribute("type","hidden"),i.setAttribute("value",""),i.setAttribute("name",`command[${r}][id]`),o.setAttribute("type","hidden"),o.setAttribute("value",e.getAttribute("project-id")),o.setAttribute("name",`command[${r}][project_id]`),n.setAttribute("label","Command"),n.setAttribute("value",""),n.setAttribute("dmb-name",`command[${r}][command]`),n.setAttribute("validate","required"),s.appendChild(i),s.appendChild(o),s.appendChild(n),r++,e.setAttribute("counter",r)}}customElements.define("dmb-add-command",DmbAddCommand);class DmbButtonAction extends DumboDirective{constructor(){super()}init(){const t=this.getAttribute("action")||"";let e="";switch(this.classList.add("icon"),this.classList.add("button"),t){case"edit":e="icon-edit-pencil";break;case"delete":e="icon-trashcan";break;case"new":e="icon-plus1";break;case"search":e="icon-filter";break;case"execute":e="icon-chevron-right"}e.length&&this.classList.add(e),this.addEventListener("click",()=>{this.handleClick()})}handleClick(){let t=null;const e=this.getAttribute("url"),i=document.querySelector("#page-loader");switch(this.getAttribute("behavior")){case"open-panel":t=document.querySelector(this.getAttribute("panel")),e&&t.setAttribute("source",e),t.open();break;case"launch-url":location.href=e;break;case"ajax":i&&i.open(),fetch(new Request(e)).then(t=>t.json()).then(()=>{window.location.reload()}).catch(t=>{window.dmbDialogService.closeAll(),window.dmbDialogService.error(t)})}}}customElements.define("dmb-button-action",DmbButtonAction);class DmbLogin extends DumboDirective{constructor(){super();this.setTemplate('<dmb-form dmb-name="login" method="post" action="?" class="login" async><dmb-input class="dmb-input" label="User" validate="required" dmb-name="e" dmb-id="email"></dmb-input><dmb-input class="dmb-input" label="Password" type="password" dmb-name="p" autocomplete="off" validate="required" dmb-id="password"></dmb-input><dmb-button class="button button-primary" id="login-button">Ingresar</dmb-button></dmb-form>'),this.valids=[],this.form=null}init(){const t=this.querySelector("dmb-button");this.form=this.querySelector("dmb-form"),this.form.setAttribute("action",`${this.getAttribute("target")}signin`),t.click(t=>{t.preventDefault(t),this.loginClick()})}loginClick(){this.form.submit()&&this.handleLogin(this.getAttribute("target"))}handleLogin(t){const e={method:"POST",body:this.form.getFormData()},i=new Request(`${t}signin`,e);fetch(i).then(t=>{if(!t.ok)throw new Error("Usuario o password incorrecto");return t.json()}).then(()=>{window.location=`${t}index`}).catch(t=>{window.dmbDialogService.error(t)})}}customElements.define("dmb-login",DmbLogin);class DmbSimpleForm extends DumboDirective{constructor(){super()}init(){const t=this.querySelector("dmb-form"),e={method:"POST",body:null};let i=!1;t.callback=(()=>{i=this.hasAttribute("full-reload"),e.body=t.getFormData(),e.method=t.getAttribute("method");const o=new Request(t.getAttribute("action"),e);fetch(o).then(t=>{t.json().then(e=>{t.ok?(window.dmbDialogService.closeAll(),window.dmbDialogService.info(e.message),setTimeout(()=>{i?location.replace(location.href):location.reload()},1500)):(window.dmbDialogService.closeAll(),window.dmbDialogService.error(e.message))})}).catch(t=>{window.dmbDialogService.closeAll(),window.dmbDialogService.error(t.message)})})}}customElements.define("dmb-simple-form",DmbSimpleForm);